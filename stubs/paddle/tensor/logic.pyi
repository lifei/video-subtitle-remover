from ..base.data_feeder import check_type as check_type, check_variable_and_dtype as check_variable_and_dtype
from ..common_ops_import import Variable as Variable
from ..framework import LayerHelper as LayerHelper, in_dynamic_mode as in_dynamic_mode, in_dynamic_or_pir_mode as in_dynamic_or_pir_mode
from .layer_function_generator import templatedoc as templatedoc
from _typeshed import Incomplete
from paddle.tensor.creation import full as full
from paddle.tensor.math import broadcast_shape as broadcast_shape
from paddle.utils.inplace_utils import inplace_apis_in_dygraph_only as inplace_apis_in_dygraph_only

Tensor: Incomplete

def logical_and(x, y, out: Incomplete | None = None, name: Incomplete | None = None): ...
def logical_and_(x, y, name: Incomplete | None = None): ...
def logical_or(x, y, out: Incomplete | None = None, name: Incomplete | None = None): ...
def logical_or_(x, y, name: Incomplete | None = None): ...
def logical_xor(x, y, out: Incomplete | None = None, name: Incomplete | None = None): ...
def logical_xor_(x, y, name: Incomplete | None = None): ...
def logical_not(x, out: Incomplete | None = None, name: Incomplete | None = None): ...
def logical_not_(x, name: Incomplete | None = None): ...
def is_empty(x, name: Incomplete | None = None): ...
def equal_all(x, y, name: Incomplete | None = None): ...
def allclose(x, y, rtol: float = 1e-05, atol: float = 1e-08, equal_nan: bool = False, name: Incomplete | None = None): ...
def equal(x, y, name: Incomplete | None = None): ...
def equal_(x, y, name: Incomplete | None = None): ...
def greater_equal(x, y, name: Incomplete | None = None): ...
def greater_equal_(x, y, name: Incomplete | None = None): ...
def greater_than(x, y, name: Incomplete | None = None): ...
def greater_than_(x, y, name: Incomplete | None = None): ...
def less_equal(x, y, name: Incomplete | None = None): ...
def less_equal_(x, y, name: Incomplete | None = None): ...
def less_than(x, y, name: Incomplete | None = None): ...
def less_than_(x, y, name: Incomplete | None = None): ...
def not_equal(x, y, name: Incomplete | None = None): ...
def not_equal_(x, y, name: Incomplete | None = None): ...
def is_tensor(x): ...
def bitwise_and(x, y, out: Incomplete | None = None, name: Incomplete | None = None): ...
def bitwise_and_(x, y, name: Incomplete | None = None): ...
def bitwise_or(x, y, out: Incomplete | None = None, name: Incomplete | None = None): ...
def bitwise_or_(x, y, name: Incomplete | None = None): ...
def bitwise_xor(x, y, out: Incomplete | None = None, name: Incomplete | None = None): ...
def bitwise_xor_(x, y, name: Incomplete | None = None): ...
def bitwise_not(x, out: Incomplete | None = None, name: Incomplete | None = None): ...
def bitwise_not_(x, name: Incomplete | None = None): ...
def isclose(x, y, rtol: float = 1e-05, atol: float = 1e-08, equal_nan: bool = False, name: Incomplete | None = None): ...
