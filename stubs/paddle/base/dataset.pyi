from . import core as core
from ..utils import deprecated as deprecated
from _typeshed import Incomplete
from paddle.base.proto import data_feed_pb2 as data_feed_pb2

class DatasetFactory:
    def __init__(self) -> None: ...
    def create_dataset(self, datafeed_class: str = 'QueueDataset'): ...

class DatasetBase:
    proto_desc: Incomplete
    dataset: Incomplete
    thread_num: int
    filelist: Incomplete
    use_ps_gpu: bool
    psgpu: Incomplete
    def __init__(self) -> None: ...
    def set_pipe_command(self, pipe_command) -> None: ...
    def set_so_parser_name(self, so_parser_name) -> None: ...
    def set_rank_offset(self, rank_offset) -> None: ...
    fea_eval: Incomplete
    def set_fea_eval(self, record_candidate_size, fea_eval: bool = True) -> None: ...
    def slots_shuffle(self, slots) -> None: ...
    def set_batch_size(self, batch_size) -> None: ...
    def set_pv_batch_size(self, pv_batch_size) -> None: ...
    def set_thread(self, thread_num) -> None: ...
    def set_filelist(self, filelist) -> None: ...
    def set_input_type(self, input_type) -> None: ...
    def set_use_var(self, var_list) -> None: ...
    def set_hdfs_config(self, fs_name, fs_ugi) -> None: ...
    def set_download_cmd(self, download_cmd) -> None: ...
    def desc(self): ...

class InMemoryDataset(DatasetBase):
    fleet_send_batch_size: Incomplete
    is_user_set_queue_num: bool
    queue_num: Incomplete
    parse_ins_id: bool
    parse_content: bool
    parse_logkey: bool
    merge_by_sid: bool
    enable_pv_merge: bool
    merge_by_lineid: bool
    fleet_send_sleep_seconds: Incomplete
    trainer_num: int
    pass_id: int
    def __init__(self) -> None: ...
    dataset: Incomplete
    def set_feed_type(self, data_feed_type) -> None: ...
    def set_queue_num(self, queue_num) -> None: ...
    def set_parse_ins_id(self, parse_ins_id) -> None: ...
    def set_parse_content(self, parse_content) -> None: ...
    def set_parse_logkey(self, parse_logkey) -> None: ...
    def set_merge_by_sid(self, merge_by_sid) -> None: ...
    def set_enable_pv_merge(self, enable_pv_merge) -> None: ...
    def preprocess_instance(self) -> None: ...
    def set_current_phase(self, current_phase) -> None: ...
    def postprocess_instance(self) -> None: ...
    def set_fleet_send_batch_size(self, fleet_send_batch_size: int = 1024) -> None: ...
    def set_fleet_send_sleep_seconds(self, fleet_send_sleep_seconds: int = 0) -> None: ...
    def set_merge_by_lineid(self, merge_size: int = 2) -> None: ...
    gen_uni_feasigns: Incomplete
    local_shard_num: Incomplete
    def set_generate_unique_feasigns(self, generate_uni_feasigns, shard_num) -> None: ...
    def generate_local_tables_unlock(self, table_id, fea_dim, read_thread_num, consume_thread_num, shard_num) -> None: ...
    def set_date(self, date) -> None: ...
    def load_into_memory(self, is_shuffle: bool = False) -> None: ...
    def preload_into_memory(self, thread_num: Incomplete | None = None) -> None: ...
    def wait_preload_done(self) -> None: ...
    def local_shuffle(self) -> None: ...
    def global_shuffle(self, fleet: Incomplete | None = None, thread_num: int = 12) -> None: ...
    def release_memory(self) -> None: ...
    def get_pv_data_size(self): ...
    def get_epoch_finish(self): ...
    def clear_sample_state(self) -> None: ...
    def get_memory_data_size(self, fleet: Incomplete | None = None): ...
    def get_shuffle_data_size(self, fleet: Incomplete | None = None): ...
    def set_graph_config(self, config) -> None: ...
    def set_pass_id(self, pass_id) -> None: ...
    def get_pass_id(self): ...
    def dump_walk_path(self, path, dump_rate: int = 1000) -> None: ...
    def dump_sample_neighbors(self, path) -> None: ...

class QueueDataset(DatasetBase):
    def __init__(self) -> None: ...
    def local_shuffle(self) -> None: ...
    def global_shuffle(self, fleet: Incomplete | None = None) -> None: ...

class FileInstantDataset(DatasetBase):
    def __init__(self) -> None: ...
    def local_shuffle(self) -> None: ...
    def global_shuffle(self, fleet: Incomplete | None = None) -> None: ...

class BoxPSDataset(InMemoryDataset):
    boxps: Incomplete
    def __init__(self) -> None: ...
    def set_date(self, date) -> None: ...
    def begin_pass(self) -> None: ...
    def end_pass(self, need_save_delta) -> None: ...
    def wait_preload_done(self) -> None: ...
    def load_into_memory(self) -> None: ...
    def preload_into_memory(self) -> None: ...
    def slots_shuffle(self, slots) -> None: ...
