from .dy2static import logging_utils as logging_utils
from .dy2static.convert_call_func import ConversionOptions as ConversionOptions, add_ignore_module as add_ignore_module
from .dy2static.program_translator import ASTStaticFunction as ASTStaticFunction, ProgramTranslator as ProgramTranslator, StaticFunction as StaticFunction, SymbolicStaticFunction as SymbolicStaticFunction, convert_to_static as convert_to_static, unwrap_decorators as unwrap_decorators
from .translated_layer import INFER_MODEL_SUFFIX as INFER_MODEL_SUFFIX, INFER_PARAMS_INFO_SUFFIX as INFER_PARAMS_INFO_SUFFIX, INFER_PARAMS_SUFFIX as INFER_PARAMS_SUFFIX, INFER_PROPERTY_SUFFIX as INFER_PROPERTY_SUFFIX, TranslatedLayer as TranslatedLayer
from _typeshed import Incomplete
from paddle.base import core as core, dygraph as dygraph
from paddle.base.compiler import BuildStrategy as BuildStrategy, CompiledProgram as CompiledProgram, ExecutionStrategy as ExecutionStrategy
from paddle.base.data_feeder import check_type as check_type
from paddle.base.dygraph.base import program_desc_tracing_guard as program_desc_tracing_guard, switch_to_static_graph as switch_to_static_graph
from paddle.base.executor import Executor as Executor, scope_guard as scope_guard
from paddle.base.framework import Block as Block, EagerParamBase as EagerParamBase, Parameter as Parameter, Program as Program, Variable as Variable, dygraph_only as dygraph_only
from paddle.base.wrapped_decorator import wrap_decorator as wrap_decorator
from paddle.framework import in_dynamic_mode as in_dynamic_mode
from paddle.nn import Layer as Layer
from paddle.static.io import save_inference_model as save_inference_model
from paddle.utils.environments import BooleanEnvironmentVariable as BooleanEnvironmentVariable, EnvironmentVariableGuard as EnvironmentVariableGuard
from typing import Any

ENV_ENABLE_SOT: Incomplete

def sot_mode_guard(value: bool): ...
def create_program_from_desc(program_desc): ...
def extract_vars(inputs, err_tag: str = 'inputs'): ...

dygraph_to_static_func: Incomplete

def copy_decorator_attrs(original_func, decorated_obj): ...
def ignore_module(modules: list[Any]): ...
def to_static(function: Incomplete | None = None, input_spec: Incomplete | None = None, build_strategy: Incomplete | None = None, backend: Incomplete | None = None, **kwargs): ...
def not_to_static(func: Incomplete | None = None): ...

class _SaveLoadConfig:
    with_hook: bool
    combine_params: bool
    input_names_after_prune: Incomplete
    skip_prune_program: bool
    def __init__(self) -> None: ...
    @property
    def output_spec(self): ...
    @output_spec.setter
    def output_spec(self, spec) -> None: ...
    @property
    def model_filename(self): ...
    @model_filename.setter
    def model_filename(self, filename) -> None: ...
    @property
    def params_filename(self): ...
    @params_filename.setter
    def params_filename(self, filename) -> None: ...
    @property
    def keep_name_table(self): ...
    @keep_name_table.setter
    def keep_name_table(self, value) -> None: ...

class HookRemoveHelper:
    def __init__(self, hook) -> None: ...
    def remove(self) -> None: ...

def save(layer, path, input_spec: Incomplete | None = None, **configs): ...
def load(path, **configs): ...

class TracedLayer:
    def __init__(self, program, parameters, feed_names, fetch_names) -> None: ...
    @property
    def program(self): ...
    @staticmethod
    def trace(layer, inputs): ...
    def set_strategy(self, build_strategy: Incomplete | None = None, exec_strategy: Incomplete | None = None) -> None: ...
    def __call__(self, inputs): ...
    def save_inference_model(self, path, feed: Incomplete | None = None, fetch: Incomplete | None = None, **kwargs): ...

def get_ast_static_function(function): ...
