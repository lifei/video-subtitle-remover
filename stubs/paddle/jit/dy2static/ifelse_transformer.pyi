from .base_transformer import BaseTransformer as BaseTransformer
from .utils import FALSE_FUNC_PREFIX as FALSE_FUNC_PREFIX, TRUE_FUNC_PREFIX as TRUE_FUNC_PREFIX
from _typeshed import Incomplete
from paddle.base import unique_name as unique_name
from paddle.jit.dy2static.utils import FOR_ITER_INDEX_PREFIX as FOR_ITER_INDEX_PREFIX, FOR_ITER_ITERATOR_PREFIX as FOR_ITER_ITERATOR_PREFIX, FOR_ITER_TARGET_PREFIX as FOR_ITER_TARGET_PREFIX, FOR_ITER_TUPLE_INDEX_PREFIX as FOR_ITER_TUPLE_INDEX_PREFIX, FOR_ITER_TUPLE_PREFIX as FOR_ITER_TUPLE_PREFIX, FOR_ITER_VAR_LEN_PREFIX as FOR_ITER_VAR_LEN_PREFIX, FOR_ITER_VAR_NAME_PREFIX as FOR_ITER_VAR_NAME_PREFIX, FOR_ITER_ZIP_TO_LIST_PREFIX as FOR_ITER_ZIP_TO_LIST_PREFIX, FunctionNameLivenessAnalysis as FunctionNameLivenessAnalysis, GetterSetterHelper as GetterSetterHelper, ast_to_source_code as ast_to_source_code, create_funcDef_node as create_funcDef_node, create_get_args_node as create_get_args_node, create_name_str as create_name_str, create_nonlocal_stmt_nodes as create_nonlocal_stmt_nodes, create_set_args_node as create_set_args_node
from paddle.utils import gast as gast

GET_ARGS_FUNC_PREFIX: str
SET_ARGS_FUNC_PREFIX: str
ARGS_NAME: str

class IfElseTransformer(BaseTransformer):
    root: Incomplete
    def __init__(self, root) -> None: ...
    def transform(self) -> None: ...
    def visit_If(self, node): ...
    def visit_Call(self, node): ...
    def visit_IfExp(self, node): ...

class NameVisitor(gast.NodeVisitor):
    after_node: Incomplete
    end_node: Incomplete
    name_ids: Incomplete
    ancestor_nodes: Incomplete
    def __init__(self, after_node: Incomplete | None = None, end_node: Incomplete | None = None) -> None: ...
    def visit(self, node): ...
    def visit_If(self, node) -> None: ...
    def visit_Attribute(self, node) -> None: ...
    def visit_Name(self, node) -> None: ...
    def visit_Assign(self, node) -> None: ...
    def visit_FunctionDef(self, node) -> None: ...

def transform_if_else(node, root): ...
def create_convert_ifelse_node(return_name_ids, push_pop_ids, pred, true_func, false_func, get_args_func, set_args_func, is_if_expr: bool = False): ...
