import types
from ...profiler import EventGuard as EventGuard, event_register as event_register
from ...psdb import NO_FALLBACK_CODES as NO_FALLBACK_CODES
from ...utils import BreakGraphError as BreakGraphError, FallbackError as FallbackError, InnerError as InnerError, Singleton as Singleton, is_strict_mode as is_strict_mode, log as log, log_do as log_do
from ..custom_code import CustomCode as CustomCode
from .guard import Guard as Guard
from .opcode_executor import OpcodeExecutor as OpcodeExecutor, OpcodeExecutorBase as OpcodeExecutorBase

GuardedFunction = tuple[CustomCode, Guard]
GuardedFunctions = list[GuardedFunction]
dummy_guard: Guard

class OpcodeExecutorCache:
    MAX_CACHE_SIZE: int
    cache: dict[types.CodeType, GuardedFunctions]
    translate_count: int
    def __init__(self) -> None: ...
    def clear(self) -> None: ...
    def __call__(self, frame: types.FrameType, **kwargs) -> CustomCode: ...
    def lookup(self, frame: types.FrameType, guarded_fns: GuardedFunctions, **kwargs) -> CustomCode: ...
    def translate(self, frame: types.FrameType, **kwargs) -> tuple[CustomCode, Guard]: ...
    def analyse_guard_global_object(self, guard_fn): ...
    def analyse_guard_error(self, guard_fn, frame): ...

def start_translate(frame: types.FrameType, **kwargs) -> GuardedFunction: ...
