from ...utils import BreakGraphError as BreakGraphError, FallbackError as FallbackError
from ...utils.magic_methods import BINARY_OPS as BINARY_OPS, UNARY_OPS as UNARY_OPS, magic_method_builtin_dispatch as magic_method_builtin_dispatch
from .dispatch_functions import operator_in as operator_in, operator_is_none as operator_is_none, operator_is_not_none as operator_is_not_none, operator_not_in as operator_not_in, raise_break_graph_fn as raise_break_graph_fn, tensor_numel as tensor_numel
from .dispatcher import Dispatcher as Dispatcher, optional as optional
from .tracker import ConstTracker as ConstTracker, DanglingTracker as DanglingTracker, DummyTracker as DummyTracker
from .variables import BuiltinVariable as BuiltinVariable, ConstantVariable as ConstantVariable, ContainerVariable as ContainerVariable, DataVariable as DataVariable, DictVariable as DictVariable, EnumerateVariable as EnumerateVariable, ListVariable as ListVariable, MapVariable as MapVariable, NumpyVariable as NumpyVariable, RangeVariable as RangeVariable, SliceVariable as SliceVariable, TensorVariable as TensorVariable, TupleVariable as TupleVariable, VariableBase as VariableBase, VariableFactory as VariableFactory
from _typeshed import Incomplete

def add_guard(var: VariableBase): ...
def raise_err_handle(error): ...
def dispatch_dict(var: ListVariable | TupleVariable): ...
def dispatch_dict_fromkeys(seq: ListVariable | TupleVariable, default: VariableBase = None): ...
def dispatch_reversed(var: ContainerVariable): ...
def str_format(var: ConstantVariable, *args: ConstantVariable): ...
def str_startswith(var: ConstantVariable, substr: ConstantVariable, beg: ConstantVariable = None, end: ConstantVariable = None): ...
def str_endswith(var: ConstantVariable, substr: ConstantVariable, beg: ConstantVariable = None, end: ConstantVariable = None): ...
def is_not_func(var: VariableBase, other: VariableBase): ...

fallback_tensor_unary_method: Incomplete

def tensor_mod_dispatcher(var: ConstantVariable, other: TensorVariable): ...
def numpy_unary_dispatcher(var: NumpyVariable): ...
def numpy_binary_dispatcher(var: NumpyVariable, other: NumpyVariable): ...
def data_variable_binary_dispatcher(var, other, operator): ...
def data_variable_unary_dispatcher(var: DataVariable, fn): ...
def dispatch_pow(base: VariableBase, exp: VariableBase, mod: VariableBase = None): ...
def dispatch_sum(var: ContainerVariable | TensorVariable, start: VariableBase = None): ...
def constant_numpy_equal(left, right): ...
