from .mutable_data import DataGetter as DataGetter, MutableData as MutableData
from .pycode_generator import PyCodeGen as PyCodeGen
from .variables import VariableBase as VariableBase
from _typeshed import Incomplete
from typing import Any, NamedTuple, TypeVar

MutableDataT = TypeVar('MutableDataT', bound=MutableData)

class SideEffectsState(NamedTuple):
    data_id_to_proxy: dict[int, MutableData]
    proxy_variables: list[VariableBase]
    mutable_variables: list[VariableBase]
    proxy_versions: list[int]
    mutable_attrs: list[dict[str, Any]]

class SideEffects:
    data_id_to_proxy: dict[int, MutableData]
    proxy_variables: list[VariableBase]
    mutable_variables: list[VariableBase]
    def __init__(self) -> None: ...
    def record_proxy_variable(self, variable: VariableBase): ...
    def record_mutable_variable(self, variable: VariableBase): ...
    def get_proxy(self, proxy_type: type[MutableDataT], data: Any, getter: DataGetter) -> MutableDataT: ...
    def get_state(self): ...
    def restore_state(self, state: SideEffectsState): ...

class SideEffectRestorer:
    def pre_gen(self, codegen: PyCodeGen): ...
    def post_gen(self, codegen: PyCodeGen): ...

class DictSideEffectRestorer(SideEffectRestorer):
    var: Incomplete
    def __init__(self, var: VariableBase) -> None: ...
    def pre_gen(self, codegen: PyCodeGen): ...
    def post_gen(self, codegen: PyCodeGen): ...

class ListSideEffectRestorer(SideEffectRestorer):
    var: Incomplete
    def __init__(self, var: VariableBase) -> None: ...
    def pre_gen(self, codegen: PyCodeGen): ...
    def post_gen(self, codegen: PyCodeGen): ...

class GlobalSetSideEffectRestorer(SideEffectRestorer):
    name: Incomplete
    var: Incomplete
    def __init__(self, name: str, var: VariableBase) -> None: ...
    def pre_gen(self, codegen: PyCodeGen): ...
    def post_gen(self, codegen: PyCodeGen): ...

class GlobalDelSideEffectRestorer(SideEffectRestorer):
    name: Incomplete
    def __init__(self, name: str) -> None: ...
    def pre_gen(self, codegen: PyCodeGen): ...
    def post_gen(self, codegen: PyCodeGen): ...

class ObjSetSideEffectRestorer(SideEffectRestorer):
    obj: Incomplete
    name: Incomplete
    var: Incomplete
    def __init__(self, obj: VariableBase, name: str, var: VariableBase) -> None: ...
    def pre_gen(self, codegen: PyCodeGen): ...
    def post_gen(self, codegen: PyCodeGen): ...

class ObjDelSideEffectRestorer(SideEffectRestorer):
    obj: Incomplete
    name: Incomplete
    def __init__(self, obj: VariableBase, name: str) -> None: ...
    def pre_gen(self, codegen: PyCodeGen): ...
    def post_gen(self, codegen: PyCodeGen): ...
