from _typeshed import Incomplete
from paddle.base import backward as backward, core as core, framework as framework, unique_name as unique_name
from paddle.base.data_feeder import check_type as check_type
from paddle.base.dygraph.base import switch_to_static_graph as switch_to_static_graph
from paddle.base.framework import OpProtoHolder as OpProtoHolder
from paddle.framework import in_dynamic_mode as in_dynamic_mode
from paddle.jit.dy2static.partial_program import LazyInitialized as LazyInitialized, add_build_strategy_for as add_build_strategy_for
from paddle.jit.dy2static.utils import construct_grad_names as construct_grad_names
from paddle.nn.layer import layers as layers

INFER_MODEL_SUFFIX: str
INFER_PARAMS_SUFFIX: str
INFER_PARAMS_INFO_SUFFIX: str
INFER_PROPERTY_SUFFIX: str
LOADED_VAR_SUFFIX: str
PARAMETER_NAME_PREFIX: str
BUFFER_NAME_PREFIX: str

class _ProgramHolder:
    def __init__(self, program_desc) -> None: ...
    @property
    def infer_program(self): ...
    def train_program(self): ...
    @property
    def forward_program(self): ...
    @property
    def backward_program(self): ...
    @property
    def input_descs(self): ...
    @property
    def output_descs(self): ...
    @property
    def persistable_names(self): ...
    @property
    def scope(self): ...
    @property
    def grad_var_names(self): ...

def append_op_from_block_desc_static(block, src_block_desc): ...
def append_op_from_desc_static(block, op_desc): ...
def append_var_from_block_desc_static(block, src_block_desc, include: Incomplete | None = None, exclude: Incomplete | None = None): ...

class TranslatedLayer(layers.Layer):
    def __init__(self, programs, persistable_vars) -> None: ...
    training: bool
    def train(self) -> None: ...
    def eval(self) -> None: ...
    def program(self, method_name: str = 'forward'): ...
