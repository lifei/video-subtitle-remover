from _typeshed import Incomplete
from paddle import nn as nn
from paddle.base.param_attr import ParamAttr as ParamAttr
from paddle.nn import AdaptiveAvgPool2D as AdaptiveAvgPool2D, Conv2D as Conv2D, Dropout as Dropout, MaxPool2D as MaxPool2D
from paddle.utils.download import get_weights_path_from_url as get_weights_path_from_url

model_urls: Incomplete

class MakeFireConv(nn.Layer):
    def __init__(self, input_channels, output_channels, filter_size, padding: int = 0) -> None: ...
    def forward(self, x): ...

class MakeFire(nn.Layer):
    def __init__(self, input_channels, squeeze_channels, expand1x1_channels, expand3x3_channels) -> None: ...
    def forward(self, inputs): ...

class SqueezeNet(nn.Layer):
    version: Incomplete
    num_classes: Incomplete
    with_pool: Incomplete
    def __init__(self, version, num_classes: int = 1000, with_pool: bool = True) -> None: ...
    def forward(self, inputs): ...

def squeezenet1_0(pretrained: bool = False, **kwargs): ...
def squeezenet1_1(pretrained: bool = False, **kwargs): ...
