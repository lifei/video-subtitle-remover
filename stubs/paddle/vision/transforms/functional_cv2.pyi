from _typeshed import Incomplete
from paddle.utils import try_import as try_import

def to_tensor(pic, data_format: str = 'CHW'): ...
def resize(img, size, interpolation: str = 'bilinear'): ...
def pad(img, padding, fill: int = 0, padding_mode: str = 'constant'): ...
def crop(img, top, left, height, width): ...
def center_crop(img, output_size): ...
def hflip(img): ...
def vflip(img): ...
def adjust_brightness(img, brightness_factor): ...
def adjust_contrast(img, contrast_factor): ...
def adjust_saturation(img, saturation_factor): ...
def adjust_hue(img, hue_factor): ...
def affine(img, angle, translate, scale, shear, interpolation: str = 'nearest', fill: int = 0, center: Incomplete | None = None): ...
def rotate(img, angle, interpolation: str = 'nearest', expand: bool = False, center: Incomplete | None = None, fill: int = 0): ...
def perspective(img, startpoints, endpoints, interpolation: str = 'nearest', fill: int = 0): ...
def to_grayscale(img, num_output_channels: int = 1): ...
def normalize(img, mean, std, data_format: str = 'CHW', to_rgb: bool = False): ...
def erase(img, i, j, h, w, v, inplace: bool = False): ...
