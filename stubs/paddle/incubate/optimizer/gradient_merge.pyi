from _typeshed import Incomplete
from paddle.base import core as core
from paddle.base.framework import Variable as Variable, default_main_program as default_main_program, default_startup_program as default_startup_program, device_guard as device_guard, in_dygraph_mode as in_dygraph_mode, program_guard as program_guard

class GradientMergeOptimizer:
    GRAD_MERGE_COND_NAME: str
    inner_optimizer: Incomplete
    k_steps: Incomplete
    type: str
    avg: Incomplete
    def __init__(self, inner_optimizer, k_steps: int = 1, avg: bool = True) -> None: ...
    def backward(self, loss, startup_program: Incomplete | None = None, parameter_list: Incomplete | None = None, no_grad_set: Incomplete | None = None, callbacks: Incomplete | None = None): ...
    def apply_optimize(self, loss, startup_program, params_grads): ...
    def apply_gradients(self, params_grads): ...
    def minimize(self, loss, startup_program: Incomplete | None = None, parameter_list: Incomplete | None = None, no_grad_set: Incomplete | None = None): ...
