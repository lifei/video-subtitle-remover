from _typeshed import Incomplete
from paddle.base import core as core, framework as framework, unique_name as unique_name
from paddle.base.backward import append_backward as append_backward
from paddle.base.framework import Variable as Variable, in_dygraph_mode as in_dygraph_mode, program_guard as program_guard
from paddle.optimizer import Optimizer as Optimizer

class RecomputeOptimizer(Optimizer):
    enable_offload: bool
    def __init__(self, optimizer) -> None: ...
    def load(self, state_dict) -> None: ...
    def apply_gradients(self, params_grads): ...
    sorted_checkpoint_names: Incomplete
    def backward(self, loss, startup_program: Incomplete | None = None, parameter_list: Incomplete | None = None, no_grad_set: Incomplete | None = None, callbacks: Incomplete | None = None): ...
    def apply_optimize(self, loss, startup_program, params_grads): ...
    def minimize(self, loss, startup_program: Incomplete | None = None, parameter_list: Incomplete | None = None, no_grad_set: Incomplete | None = None): ...
