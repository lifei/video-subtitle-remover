from _typeshed import Incomplete
from paddle.base import core as core, unique_name as unique_name
from paddle.base.data_feeder import check_dtype as check_dtype, check_type as check_type, check_variable_and_dtype as check_variable_and_dtype
from paddle.base.framework import Variable as Variable, convert_np_dtype_to_dtype_ as convert_np_dtype_to_dtype_
from paddle.base.layer_helper import LayerHelper as LayerHelper
from paddle.base.param_attr import ParamAttr as ParamAttr

def fused_embedding_seq_pool(input, size, is_sparse: bool = False, padding_idx: Incomplete | None = None, combiner: str = 'sum', param_attr: Incomplete | None = None, dtype: str = 'float32'): ...
def fused_seqpool_cvm(input, pool_type, cvm, pad_value: float = 0.0, use_cvm: bool = True, cvm_offset: int = 2): ...
def multiclass_nms2(bboxes, scores, score_threshold, nms_top_k, keep_top_k, nms_threshold: float = 0.3, normalized: bool = True, nms_eta: float = 1.0, background_label: int = 0, return_index: bool = False, name: Incomplete | None = None): ...
def search_pyramid_hash(input, num_emb, space_len, pyramid_layer, rand_len, drop_out_percent, is_training, use_filter, white_list_len, black_list_len, seed, lr, param_attr: Incomplete | None = None, param_attr_wl: Incomplete | None = None, param_attr_bl: Incomplete | None = None, name: Incomplete | None = None, distribute_update_vars: Incomplete | None = None, dtype: str = 'float32'): ...
def shuffle_batch(x, seed: Incomplete | None = None): ...
def partial_concat(input, start_index: int = 0, length: int = -1): ...
def partial_sum(input, start_index: int = 0, length: int = -1): ...
def tdm_child(x, node_nums, child_nums, param_attr: Incomplete | None = None, dtype: str = 'int32'): ...
def tdm_sampler(x, neg_samples_num_list, layer_node_num_list, leaf_node_num, tree_travel_attr: Incomplete | None = None, tree_layer_attr: Incomplete | None = None, output_positive: bool = True, output_list: bool = True, seed: int = 0, tree_dtype: str = 'int32', dtype: str = 'int32'): ...
def rank_attention(input, rank_offset, rank_param_shape, rank_param_attr, max_rank: int = 3, max_size: int = 0): ...
def batch_fc(input, param_size, param_attr, bias_size, bias_attr, act: Incomplete | None = None): ...
def bilateral_slice(x, guide, grid, has_offset, name: Incomplete | None = None): ...
def correlation(x, y, pad_size, kernel_size, max_displacement, stride1, stride2, corr_type_multiply: int = 1): ...
def fused_bn_add_act(x, y, momentum: float = 0.9, epsilon: float = 1e-05, param_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, moving_mean_name: Incomplete | None = None, moving_variance_name: Incomplete | None = None, act: Incomplete | None = None, name: Incomplete | None = None): ...
def pow2_decay_with_linear_warmup(warmup_steps, total_steps, base_lr, end_lr, dtype: str = 'float32', name: Incomplete | None = None): ...
