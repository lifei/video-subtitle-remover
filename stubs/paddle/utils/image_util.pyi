from _typeshed import Incomplete

def resize_image(img, target_size): ...
def flip(im): ...
def crop_img(im, inner_size, color: bool = True, test: bool = True): ...
def decode_jpeg(jpeg_string): ...
def preprocess_img(im, img_mean, crop_size, is_train, color: bool = True): ...
def load_meta(meta_path, mean_img_size, crop_size, color: bool = True): ...
def load_image(img_path, is_color: bool = True): ...
def oversample(img, crop_dims): ...

class ImageTransformer:
    is_color: Incomplete
    def __init__(self, transpose: Incomplete | None = None, channel_swap: Incomplete | None = None, mean: Incomplete | None = None, is_color: bool = True) -> None: ...
    transpose: Incomplete
    def set_transpose(self, order) -> None: ...
    channel_swap: Incomplete
    def set_channel_swap(self, order) -> None: ...
    mean: Incomplete
    def set_mean(self, mean) -> None: ...
    def transformer(self, data): ...
