from ..base.data_feeder import check_dtype as check_dtype, convert_dtype as convert_dtype
from ..base.framework import Block as Block, Variable as Variable, in_dygraph_mode as in_dygraph_mode
from _typeshed import Incomplete
from paddle.pir.core import convert_np_dtype_to_dtype_ as convert_np_dtype_to_dtype_
from weakref import WeakKeyDictionary

def convert_to_list(value, n, name, dtype=...): ...
def is_sequence(seq): ...

class UniqueIdMap(WeakKeyDictionary):
    data: Incomplete
    def __init__(self) -> None: ...

uniqueidmap: Incomplete

def uniqueid(obj): ...
def to_sequence(nest): ...
def flatten(nest): ...
def pack_sequence_as(structure, flat_sequence): ...
def map_structure(func, *structure): ...
def hold_mutable_vars(structure): ...
def copy_mutable_vars(structure): ...
def padding_to_same_structure(nest1, nest2, obj: Incomplete | None = None): ...
def assert_same_structure(nest1, nest2, check_types: bool = True) -> None: ...
def get_int_tensor_list(ele_list, place: Incomplete | None = None, default_dtype: str = 'int64'): ...
def get_shape_tensor_inputs(inputs, attrs, shape, op_type): ...
def convert_shape_to_list(shape): ...
def check_shape(shape) -> None: ...
def try_set_static_shape_tensor(tensor, shape) -> None: ...
def try_get_constant_shape_from_tensor(shape_tensor): ...
def get_inputs_outputs_in_block(block): ...
