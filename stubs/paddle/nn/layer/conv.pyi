from ...device import get_cudnn_version as get_cudnn_version, is_compiled_with_cuda as is_compiled_with_cuda, is_compiled_with_rocm as is_compiled_with_rocm
from ...utils import convert_to_list as convert_to_list
from ..initializer import Normal as Normal
from .layers import Layer as Layer
from _typeshed import Incomplete
from paddle import get_flags as get_flags

class _ConvNd(Layer):
    output_padding: Incomplete
    weight: Incomplete
    bias: Incomplete
    def __init__(self, in_channels, out_channels, kernel_size, transposed, dims, stride: int = 1, padding: int = 0, padding_mode: str = 'zeros', output_padding: int = 0, dilation: int = 1, groups: int = 1, weight_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, data_format: str = 'NCHW') -> None: ...
    def extra_repr(self): ...

class Conv1D(_ConvNd):
    def __init__(self, in_channels, out_channels, kernel_size, stride: int = 1, padding: int = 0, dilation: int = 1, groups: int = 1, padding_mode: str = 'zeros', weight_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, data_format: str = 'NCL') -> None: ...
    def forward(self, x): ...

class Conv1DTranspose(_ConvNd):
    def __init__(self, in_channels, out_channels, kernel_size, stride: int = 1, padding: int = 0, output_padding: int = 0, groups: int = 1, dilation: int = 1, weight_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, data_format: str = 'NCL') -> None: ...
    def forward(self, x, output_size: Incomplete | None = None): ...

class Conv2D(_ConvNd):
    def __init__(self, in_channels, out_channels, kernel_size, stride: int = 1, padding: int = 0, dilation: int = 1, groups: int = 1, padding_mode: str = 'zeros', weight_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, data_format: str = 'NCHW') -> None: ...
    def forward(self, x): ...

class Conv2DTranspose(_ConvNd):
    def __init__(self, in_channels, out_channels, kernel_size, stride: int = 1, padding: int = 0, output_padding: int = 0, dilation: int = 1, groups: int = 1, weight_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, data_format: str = 'NCHW') -> None: ...
    def forward(self, x, output_size: Incomplete | None = None): ...

class Conv3D(_ConvNd):
    def __init__(self, in_channels, out_channels, kernel_size, stride: int = 1, padding: int = 0, dilation: int = 1, groups: int = 1, padding_mode: str = 'zeros', weight_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, data_format: str = 'NCDHW') -> None: ...
    def forward(self, x): ...

class Conv3DTranspose(_ConvNd):
    def __init__(self, in_channels, out_channels, kernel_size, stride: int = 1, padding: int = 0, output_padding: int = 0, dilation: int = 1, groups: int = 1, weight_attr: Incomplete | None = None, bias_attr: Incomplete | None = None, data_format: str = 'NCDHW') -> None: ...
    def forward(self, x, output_size: Incomplete | None = None): ...
