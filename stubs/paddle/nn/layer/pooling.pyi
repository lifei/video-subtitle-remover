from .layers import Layer as Layer
from _typeshed import Incomplete

class AvgPool1D(Layer):
    kernel_size: Incomplete
    stride: Incomplete
    padding: Incomplete
    ceil_mode: Incomplete
    exclusive: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, exclusive: bool = True, ceil_mode: bool = False, name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class AvgPool2D(Layer):
    ksize: Incomplete
    stride: Incomplete
    padding: Incomplete
    ceil_mode: Incomplete
    exclusive: Incomplete
    divisor: Incomplete
    data_format: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, ceil_mode: bool = False, exclusive: bool = True, divisor_override: Incomplete | None = None, data_format: str = 'NCHW', name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class AvgPool3D(Layer):
    ksize: Incomplete
    stride: Incomplete
    padding: Incomplete
    ceil_mode: Incomplete
    exclusive: Incomplete
    divisor: Incomplete
    data_format: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, ceil_mode: bool = False, exclusive: bool = True, divisor_override: Incomplete | None = None, data_format: str = 'NCDHW', name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class MaxPool1D(Layer):
    kernel_size: Incomplete
    stride: Incomplete
    padding: Incomplete
    ceil_mode: Incomplete
    return_mask: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, return_mask: bool = False, ceil_mode: bool = False, name: Incomplete | None = None) -> None: ...
    def forward(self, input): ...
    def extra_repr(self): ...

class MaxPool2D(Layer):
    ksize: Incomplete
    stride: Incomplete
    padding: Incomplete
    return_mask: Incomplete
    ceil_mode: Incomplete
    data_format: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, return_mask: bool = False, ceil_mode: bool = False, data_format: str = 'NCHW', name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class MaxPool3D(Layer):
    ksize: Incomplete
    stride: Incomplete
    padding: Incomplete
    return_mask: Incomplete
    ceil_mode: Incomplete
    data_format: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, return_mask: bool = False, ceil_mode: bool = False, data_format: str = 'NCDHW', name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class AdaptiveAvgPool1D(Layer):
    output_size: Incomplete
    name: Incomplete
    def __init__(self, output_size, name: Incomplete | None = None) -> None: ...
    def forward(self, input): ...
    def extra_repr(self): ...

class AdaptiveAvgPool2D(Layer):
    def __init__(self, output_size, data_format: str = 'NCHW', name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class AdaptiveAvgPool3D(Layer):
    def __init__(self, output_size, data_format: str = 'NCDHW', name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class AdaptiveMaxPool1D(Layer):
    output_size: Incomplete
    return_mask: Incomplete
    name: Incomplete
    def __init__(self, output_size, return_mask: bool = False, name: Incomplete | None = None) -> None: ...
    def forward(self, input): ...
    def extra_repr(self): ...

class AdaptiveMaxPool2D(Layer):
    def __init__(self, output_size, return_mask: bool = False, name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class AdaptiveMaxPool3D(Layer):
    def __init__(self, output_size, return_mask: bool = False, name: Incomplete | None = None) -> None: ...
    def forward(self, x): ...
    def extra_repr(self): ...

class MaxUnPool1D(Layer):
    ksize: Incomplete
    stride: Incomplete
    padding: Incomplete
    data_format: Incomplete
    output_size: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, data_format: str = 'NCL', output_size: Incomplete | None = None, name: Incomplete | None = None) -> None: ...
    def forward(self, x, indices): ...
    def extra_repr(self): ...

class MaxUnPool2D(Layer):
    ksize: Incomplete
    stride: Incomplete
    padding: Incomplete
    data_format: Incomplete
    output_size: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, data_format: str = 'NCHW', output_size: Incomplete | None = None, name: Incomplete | None = None) -> None: ...
    def forward(self, x, indices): ...
    def extra_repr(self): ...

class MaxUnPool3D(Layer):
    ksize: Incomplete
    stride: Incomplete
    padding: Incomplete
    data_format: Incomplete
    output_size: Incomplete
    name: Incomplete
    def __init__(self, kernel_size, stride: Incomplete | None = None, padding: int = 0, data_format: str = 'NCDHW', output_size: Incomplete | None = None, name: Incomplete | None = None) -> None: ...
    def forward(self, x, indices): ...
    def extra_repr(self): ...
