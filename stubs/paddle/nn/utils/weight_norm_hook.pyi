from ...base.data_feeder import check_variable_and_dtype as check_variable_and_dtype
from ...base.layer_helper import LayerHelper as LayerHelper
from ...framework import in_dynamic_mode as in_dynamic_mode
from _typeshed import Incomplete

def l2_norm(x, axis, epsilon: float = 1e-12, name: Incomplete | None = None): ...
def norm_except_dim(p, dim): ...

class WeightNorm:
    name: Incomplete
    dim: Incomplete
    def __init__(self, name, dim) -> None: ...
    def compute_weight(self, layer): ...
    @staticmethod
    def apply(layer, name, dim): ...
    def remove(self, layer) -> None: ...
    def __call__(self, layer, inputs) -> None: ...

def weight_norm(layer, name: str = 'weight', dim: int = 0): ...
def remove_weight_norm(layer, name: str = 'weight'): ...
