from ...base.data_feeder import check_dtype as check_dtype, check_type as check_type, check_variable_and_dtype as check_variable_and_dtype
from ...tensor import clip as clip, concat as concat, sqrt as sqrt, sum as sum
from ...tensor.creation import zeros as zeros
from ...tensor.manipulation import squeeze as squeeze, unsqueeze as unsqueeze
from _typeshed import Incomplete
from paddle import pir as pir
from paddle.base.layer_helper import LayerHelper as LayerHelper
from paddle.common_ops_import import Variable as Variable, default_main_program as default_main_program
from paddle.framework import core as core, in_dynamic_mode as in_dynamic_mode, in_dynamic_or_pir_mode as in_dynamic_or_pir_mode, in_pir_mode as in_pir_mode
from paddle.tensor.creation import full as full

def unfold(x, kernel_sizes, strides: int = 1, paddings: int = 0, dilations: int = 1, name: Incomplete | None = None): ...
def interpolate(x, size: Incomplete | None = None, scale_factor: Incomplete | None = None, mode: str = 'nearest', align_corners: bool = False, align_mode: int = 0, data_format: str = 'NCHW', name: Incomplete | None = None): ...
def upsample(x, size: Incomplete | None = None, scale_factor: Incomplete | None = None, mode: str = 'nearest', align_corners: bool = False, align_mode: int = 0, data_format: str = 'NCHW', name: Incomplete | None = None): ...
def bilinear(x1, x2, weight, bias: Incomplete | None = None, name: Incomplete | None = None): ...
def dropout(x, p: float = 0.5, axis: Incomplete | None = None, training: bool = True, mode: str = 'upscale_in_train', name: Incomplete | None = None): ...
def dropout2d(x, p: float = 0.5, training: bool = True, data_format: str = 'NCHW', name: Incomplete | None = None): ...
def dropout3d(x, p: float = 0.5, training: bool = True, data_format: str = 'NCDHW', name: Incomplete | None = None): ...
def alpha_dropout(x, p: float = 0.5, training: bool = True, name: Incomplete | None = None): ...
def pad(x, pad, mode: str = 'constant', value: float = 0.0, data_format: str = 'NCHW', name: Incomplete | None = None): ...
def zeropad2d(x, padding, data_format: str = 'NCHW', name: Incomplete | None = None): ...
def cosine_similarity(x1, x2, axis: int = 1, eps: float = 1e-08): ...
def linear(x, weight, bias: Incomplete | None = None, name: Incomplete | None = None): ...
def label_smooth(label, prior_dist: Incomplete | None = None, epsilon: float = 0.1, name: Incomplete | None = None): ...
def class_center_sample(label, num_classes, num_samples, group: Incomplete | None = None): ...
def fold(x, output_sizes, kernel_sizes, strides: int = 1, paddings: int = 0, dilations: int = 1, name: Incomplete | None = None): ...
