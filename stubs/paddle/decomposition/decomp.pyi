from . import register as register
from paddle import pir as pir
from paddle.autograd import ir_backward as ir_backward
from paddle.base.core import call_decomp as call_decomp, decomp_ops_contain_unused_output as decomp_ops_contain_unused_output, has_decomp as has_decomp
from paddle.base.libpaddle.pir import Block as Block, Operation as Operation, Program as Program
from paddle.framework import core as core

def decompose(program, src_vars, blacklist=..., whitelist=...): ...
def get_leaf_ops(block, global_outputs): ...
def replace_graph_outputs(global_outputs, op_outputs, op_index, related_ops_output_indexes) -> None: ...
def decompose_fwd_op(block: Block, fwd_op: pir.Operation, grad_var_to_var_map: dict) -> tuple: ...
def decompose_bwd_op_directly(block: Block, fwd_op: pir.Operation, bwd_op: pir.Operation, grad_var_to_var_map: dict) -> tuple: ...
def decompose_bwd_op_after_fwd_op(block: Block, fwd_op: pir.Operation, bwd_op: pir.Operation, grad_var_to_var_map: dict, fwd_inputs: dict, fwd_outputs_after_decompose: tuple) -> tuple: ...
