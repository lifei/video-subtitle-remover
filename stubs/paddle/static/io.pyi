from _typeshed import Incomplete
from paddle.base import CompiledProgram as CompiledProgram, Program as Program, Variable as Variable, core as core, default_main_program as default_main_program, program_guard as program_guard, unique_name as unique_name
from paddle.base.executor import Executor as Executor, global_scope as global_scope
from paddle.base.framework import Parameter as Parameter, dygraph_not_support as dygraph_not_support, static_only as static_only
from paddle.base.log_helper import get_logger as get_logger
from paddle.framework.io_utils import is_belong_to_optimizer as is_belong_to_optimizer, is_parameter as is_parameter, is_persistable as is_persistable

def prepend_feed_ops(inference_program, feed_target_names, feed_holder_name: str = 'feed') -> None: ...
def append_fetch_ops(inference_program, fetch_target_names, fetch_holder_name: str = 'fetch') -> None: ...
def normalize_program(program, feed_vars, fetch_vars, **kwargs): ...
def serialize_program(feed_vars, fetch_vars, **kwargs): ...
def serialize_persistables(feed_vars, fetch_vars, executor, **kwargs): ...
def save_to_file(path, content) -> None: ...
def save_inference_model(path_prefix, feed_vars, fetch_vars, executor, **kwargs) -> None: ...
def deserialize_program(data): ...
def deserialize_persistables(program, data, executor) -> None: ...
def load_from_file(path): ...
def load_inference_model(path_prefix, executor, **kwargs): ...
def save_vars(executor, dirname, main_program: Incomplete | None = None, vars: Incomplete | None = None, predicate: Incomplete | None = None, filename: Incomplete | None = None): ...
def load_vars(executor, dirname, main_program: Incomplete | None = None, vars: Incomplete | None = None, predicate: Incomplete | None = None, filename: Incomplete | None = None) -> None: ...
def save(program, model_path, protocol: int = 4, **configs): ...
def load(program, model_path, executor: Incomplete | None = None, var_list: Incomplete | None = None) -> None: ...
def set_program_state(program, state_dict) -> None: ...
def get_program_persistable_vars(program): ...
def load_program_state(model_path, var_list: Incomplete | None = None): ...
