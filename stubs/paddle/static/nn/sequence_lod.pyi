from _typeshed import Incomplete
from paddle.base.core import VarDesc as VarDesc
from paddle.base.data_feeder import check_type as check_type, check_variable_and_dtype as check_variable_and_dtype
from paddle.base.framework import Variable as Variable, in_dygraph_mode as in_dygraph_mode
from paddle.base.layer_helper import LayerHelper as LayerHelper
from paddle.base.layers.layer_function_generator import templatedoc as templatedoc

def sequence_conv(input, num_filters, filter_size: int = 3, filter_stride: int = 1, padding: bool = True, padding_start: Incomplete | None = None, bias_attr: Incomplete | None = None, param_attr: Incomplete | None = None, act: Incomplete | None = None, name: Incomplete | None = None): ...
def sequence_softmax(input, use_cudnn: bool = False, name: Incomplete | None = None): ...
def sequence_pool(input, pool_type, is_test: bool = False, pad_value: float = 0.0): ...
def sequence_concat(input, name: Incomplete | None = None): ...
def sequence_first_step(input): ...
def sequence_last_step(input): ...
def sequence_slice(input, offset, length, name: Incomplete | None = None): ...
def sequence_expand(x, y, ref_level: int = -1, name: Incomplete | None = None): ...
def sequence_expand_as(x, y, name: Incomplete | None = None): ...
def sequence_pad(x, pad_value, maxlen: Incomplete | None = None, name: Incomplete | None = None): ...
def sequence_unpad(x, length, name: Incomplete | None = None): ...
def sequence_reshape(input, new_dim): ...
def sequence_scatter(input, index, updates, name: Incomplete | None = None): ...
def sequence_enumerate(input, win_size, pad_value: int = 0, name: Incomplete | None = None): ...
def sequence_mask(x, maxlen: Incomplete | None = None, dtype: str = 'int64', name: Incomplete | None = None): ...
def sequence_reverse(x, name: Incomplete | None = None): ...
