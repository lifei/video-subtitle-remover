from ..base_observer import BaseObserver as BaseObserver
from ..factory import ObserverFactory as ObserverFactory
from _typeshed import Incomplete

class GroupWiseWeightObserver(ObserverFactory):
    def __init__(self, quant_bits: int = 8, group_size: int = 128) -> None: ...

class GroupWiseWeightObserverLayer(BaseObserver):
    quant_bits: Incomplete
    group_size: Incomplete
    def __init__(self, layer, quant_bits: int = 8, group_size: int = 128) -> None: ...
    def forward(self, inputs): ...
    def min_value(self) -> float: ...
    def max_value(self) -> float: ...
    def bit_length(self): ...
    def quant_axis(self): ...
    def cal_thresholds(self) -> None: ...
    def scales(self): ...
    def zero_points(self): ...
