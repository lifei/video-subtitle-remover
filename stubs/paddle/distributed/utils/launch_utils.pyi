from ..utils.log_utils import get_logger as get_logger
from _typeshed import Incomplete
from paddle.distributed.fleet.launch_utils import get_backend_by_compile_flag as get_backend_by_compile_flag

logger: Incomplete

def get_cluster_from_args(args, selected_gpus): ...
def get_gpus(selected_gpus): ...

class Hdfs:
    hdfs_ugi: Incomplete
    hdfs_name: Incomplete
    hdfs_path: Incomplete
    def __init__(self) -> None: ...
    def is_valid(self): ...
    def __eq__(self, n): ...
    def __ne__(self, n): ...

class Cluster:
    job_server: Incomplete
    pods: Incomplete
    hdfs: Incomplete
    job_stage_flag: Incomplete
    def __init__(self, hdfs) -> None: ...
    def __eq__(self, cluster): ...
    def __ne__(self, cluster): ...
    def update_pods(self, cluster) -> None: ...
    def trainers_nranks(self): ...
    def pods_nranks(self): ...
    def trainers_endpoints(self): ...
    def pods_endpoints(self): ...
    def get_pod_by_id(self, pod_id): ...

class JobServer:
    endpoint: Incomplete
    def __init__(self) -> None: ...
    def __eq__(self, j): ...
    def __ne__(self, j): ...

class Trainer:
    gpus: Incomplete
    endpoint: Incomplete
    rank: Incomplete
    def __init__(self) -> None: ...
    def __eq__(self, t): ...
    def __ne__(self, t): ...
    def get_rank(self): ...

class Pod:
    rank: Incomplete
    id: Incomplete
    addr: Incomplete
    port: Incomplete
    trainers: Incomplete
    gpus: Incomplete
    def __init__(self) -> None: ...
    def __eq__(self, pod): ...
    def __ne__(self, pod): ...
    def parse_response(self, res_pods) -> None: ...
    def get_visible_gpus(self): ...

def get_cluster(node_ips, node_ip, trainer_endpoints, selected_gpus): ...
def terminate_local_procs(procs) -> None: ...
def get_host_name_ip(): ...
def add_arguments(argname, type, default, help, argparser, **kwargs) -> None: ...
def find_free_ports(num): ...

class TrainerProc:
    proc: Incomplete
    log_fn: Incomplete
    log_offset: Incomplete
    rank: Incomplete
    local_rank: Incomplete
    cmd: Incomplete
    def __init__(self) -> None: ...

def start_local_trainers(cluster, pod, training_script, training_script_args, log_dir: Incomplete | None = None): ...
def pull_worker_log(tp) -> None: ...
def watch_local_trainers(procs, nranks): ...
