from paddle import framework as framework
from paddle.distributed.fleet import cloud_utils as cloud_utils, launch_utils as launch_utils
from paddle.distributed.fleet.elastic import enable_elastic as enable_elastic, launch_elastic as launch_elastic
from paddle.distributed.fleet.launch_utils import DeviceMode as DeviceMode, DistributeMode as DistributeMode, ParameterServerLauncher as ParameterServerLauncher, block_windows_and_macos as block_windows_and_macos, check_backend as check_backend, direct_start as direct_start, find_free_ports as find_free_ports, get_cluster as get_cluster, get_host_name_ip as get_host_name_ip, get_logger as get_logger, logger as logger, start_local_trainers as start_local_trainers, terminate_local_procs as terminate_local_procs, watch_local_trainers as watch_local_trainers

def get_cluster_from_args(args, device_mode, devices_per_proc): ...
def cpuonly_check(args): ...
def get_cluster_info(args): ...
def get_global_envs(args, tmp_dir): ...
def launch_collective(args) -> None: ...
def launch_ps(args, distribute_mode) -> None: ...
def infer_backend(args) -> None: ...
def which_distributed_mode(args): ...
def launch() -> None: ...
