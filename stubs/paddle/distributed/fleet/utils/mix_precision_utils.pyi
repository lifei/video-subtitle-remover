from _typeshed import Incomplete
from paddle import nn as nn
from paddle.base import framework as framework
from paddle.base.dygraph import to_variable as to_variable
from paddle.distributed import fleet as fleet
from paddle.distributed.fleet.utils.hybrid_parallel_util import obtain_optimizer_parameters_list as obtain_optimizer_parameters_list
from paddle.framework import core as core
from paddle.utils import deprecated as deprecated

class MixPrecisionLayer(nn.Layer):
    def __init__(self, layers, dtype: str = 'float16') -> None: ...
    def forward(self, *inputs, **kwargs): ...
    def state_dict(self, destination: Incomplete | None = None, include_sublayers: bool = True, structured_name_prefix: str = ''): ...
    def set_state_dict(self, state_dict, use_structured_name: bool = True) -> None: ...

class MixPrecisionOptimizer:
    def __init__(self, optimizer) -> None: ...
    def step(self): ...
    def clear_grad(self, set_to_zero: bool = True) -> None: ...
    def __getattr__(self, item): ...

def unscale_method(self, optimizer) -> None: ...

class MixPrecisionScaler:
    def __init__(self, scaler) -> None: ...
    def __getattr__(self, item): ...
