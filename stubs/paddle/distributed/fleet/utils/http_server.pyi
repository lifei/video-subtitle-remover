import http.server as SimpleHTTPServer
from _typeshed import Incomplete
from http.server import HTTPServer

def get_logger(name, level, fmt): ...

class KVHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def do_GET(self) -> None: ...
    def do_PUT(self) -> None: ...
    def do_DELETE(self) -> None: ...
    def log_message(self, format, *args) -> None: ...
    def send_status_code(self, code) -> None: ...

class KVHTTPServer(HTTPServer):
    delete_kv_lock: Incomplete
    delete_kv: Incomplete
    kv_lock: Incomplete
    kv: Incomplete
    def __init__(self, port, handler) -> None: ...
    def get_deleted_size(self, key): ...

class KVServer:
    http_server: Incomplete
    listen_thread: Incomplete
    size: Incomplete
    def __init__(self, port, size={}) -> None: ...
    def start(self): ...
    def stop(self) -> None: ...
    def should_stop(self): ...
