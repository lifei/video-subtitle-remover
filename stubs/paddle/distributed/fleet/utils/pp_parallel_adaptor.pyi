from _typeshed import Incomplete

class ParallelConfig:
    mp: Incomplete
    pp: Incomplete
    vpp: Incomplete
    sharding: Incomplete
    def __init__(self, mp: int, pp: int, vpp: int = 1, sharding: int = 1) -> None: ...
    def pipe_parallel_group(self, i: int, j: int): ...

class LayerReNamingHelper:
    def __init__(self, template: str) -> None: ...
    def get_new_layer_name(self, old_layer_name: str): ...

class LayerReNamingManager:
    def __init__(self) -> None: ...
    def get_new_layer_name(self, old_name: str): ...
    def get_new_param_name(self, old_name: str): ...

class PipeLineModelAdaptor:
    def __init__(self, src_parallel_config: ParallelConfig, dst_parallel_config: ParallelConfig, transformer_layer_num: int, segment_method: str = 'layer') -> None: ...
    def apply(self, src_model_path: str, dst_model_path: str): ...
    def peek_model(self, model_dir: str): ...
    def peek_partial_model(self, sub_dir: str): ...
    def extract_layers(self, dir: str, with_shared: bool): ...
    def sort_layers(self, layers: list): ...
    def segment_layers(self, layers: list, config: ParallelConfig, segment_method: str = 'layer'): ...
    def merge_layers(self, layers_segment: list, save_dir: str): ...

def parse_args(): ...
def adaptor_from_args(args): ...
def main() -> None: ...
