from _typeshed import Incomplete
from paddle.distributed.fleet.layers.mpu import RNGStatesTracker as RNGStatesTracker

class StrategyGroupBase:
    random_states_tracker: Incomplete
    def __init__(self, list_of_ranks) -> None: ...
    def add_random_seed(self, name, seed) -> None: ...
    def get_random_states_tracker(self): ...
    @property
    def world_size(self): ...
    @property
    def group(self): ...

class DPGroup(StrategyGroupBase):
    def __init__(self, list_of_ranks) -> None: ...

class MPGroup(StrategyGroupBase):
    def __init__(self, list_of_ranks) -> None: ...

class ShardingGroup(StrategyGroupBase):
    def __init__(self, list_of_ranks) -> None: ...

class PPGroup(StrategyGroupBase):
    def __init__(self, list_of_ranks) -> None: ...
    @property
    def rank_of_prev_stage(self): ...
    @property
    def rank_of_next_stage(self): ...
    @property
    def p2p_groups(self): ...
