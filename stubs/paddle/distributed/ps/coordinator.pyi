import abc
from _typeshed import Incomplete
from paddle.distributed import fleet as fleet
from paddle.distributed.communicator import FLCommunicator as FLCommunicator
from paddle.distributed.fleet.proto import the_one_ps_pb2 as the_one_ps_pb2
from paddle.distributed.ps.utils.public import is_distributed_env as is_distributed_env

logger: Incomplete
formatter: Incomplete
ch: Incomplete

class ClientInfoAttr:
    CLIENT_ID: int
    DEVICE_TYPE: int
    COMPUTE_CAPACITY: int
    BANDWIDTH: int

class FLStrategy:
    JOIN: int
    WAIT: int
    FINISH: int

class ClientSelectorBase(abc.ABC, metaclass=abc.ABCMeta):
    fl_clients_info_mp: Incomplete
    clients_info: Incomplete
    fl_strategy: Incomplete
    def __init__(self, fl_clients_info_mp) -> None: ...
    fl_client_info_desc: Incomplete
    def parse_from_string(self) -> None: ...
    @abc.abstractmethod
    def select(self): ...

class ClientSelector(ClientSelectorBase):
    def __init__(self, fl_clients_info_mp) -> None: ...
    def select(self): ...

class FLClientBase(abc.ABC):
    def __init__(self) -> None: ...
    role_maker: Incomplete
    config: Incomplete
    total_train_epoch: Incomplete
    train_statical_info: Incomplete
    epoch_idx: int
    worker_index: Incomplete
    main_program: Incomplete
    startup_program: Incomplete
    strategy_handlers: Incomplete
    exe: Incomplete
    use_cuda: Incomplete
    place: Incomplete
    print_step: Incomplete
    debug: Incomplete
    reader_type: Incomplete
    def set_basic_config(self, role_maker, config, metrics) -> None: ...
    train_dataset: Incomplete
    train_file_list: Incomplete
    def set_train_dataset_info(self, train_dataset, train_file_list) -> None: ...
    test_dataset: Incomplete
    test_file_list: Incomplete
    def set_test_dataset_info(self, test_dataset, test_file_list) -> None: ...
    train_example_nums: Incomplete
    def set_train_example_num(self, num) -> None: ...
    def load_dataset(self) -> None: ...
    def release_dataset(self) -> None: ...
    def set_executor(self) -> None: ...
    save_model_path: Incomplete
    def make_save_model_path(self) -> None: ...
    def set_dump_fields(self) -> None: ...
    metrics: Incomplete
    fetch_vars: Incomplete
    def set_metrics(self, metrics) -> None: ...

class FLClient(FLClientBase):
    def __init__(self) -> None: ...
    def run(self) -> None: ...
    def train_loop(self) -> None: ...
    def push_fl_client_info_sync(self, state_info) -> None: ...
    def pull_fl_strategy(self): ...
    def barrier(self) -> None: ...
    def register_handlers(self, strategy_type, callback_func) -> None: ...
    def register_default_handlers(self) -> None: ...
    def callback_init_worker(self) -> None: ...
    def callback_initialize_model_params(self) -> None: ...
    def callback_train(self) -> None: ...
    def callback_infer(self) -> None: ...
    def callback_save_model(self) -> None: ...
    def callback_finish(self) -> None: ...
    def print_program(self) -> None: ...
    def print_train_statical_info(self) -> None: ...

class Coordinator:
    def __init__(self, ps_hosts) -> None: ...
    def start_coordinator(self, self_endpoint, trainer_endpoints) -> None: ...
    def make_fl_strategy(self) -> None: ...
