from ..process_mesh import ProcessMesh as ProcessMesh
from .dist_op import DistributedOperator as DistributedOperator
from .dist_tensor import DistributedTensor as DistributedTensor
from .utils import __no_shape_var_type__ as __no_shape_var_type__, is_loss_grad_op as is_loss_grad_op
from _typeshed import Incomplete
from paddle.distributed.passes import PassContext as PassContext
from paddle.framework import IrGraph as IrGraph, core as core, set_flags as set_flags

def get_default_distributed_context(): ...
def set_default_distributed_context(dist_context) -> None: ...

class DistributedContext:
    def __init__(self, serial_main_prog: Incomplete | None = None, serial_startup_prog: Incomplete | None = None, serial_optimizer: Incomplete | None = None, serial_loss: Incomplete | None = None, feed_vars={}, fetch_vars={}, cluster: Incomplete | None = None, strategy: Incomplete | None = None, json_config: Incomplete | None = None) -> None: ...
    @property
    def serial_main_program(self): ...
    @property
    def serial_startup_program(self): ...
    @property
    def serial_loss(self): ...
    @property
    def serial_optimizer(self): ...
    @property
    def serial_feed_vars(self): ...
    @property
    def serial_fetch_vars(self): ...
    @property
    def dist_main_programs(self): ...
    @property
    def dist_startup_programs(self): ...
    @property
    def cluster(self): ...
    @property
    def strategy(self): ...
    @property
    def serial_graph(self): ...
    @property
    def serial_ordered_nodes(self): ...
    @property
    def process_meshes(self): ...
    @process_meshes.setter
    def process_meshes(self, val) -> None: ...
    @property
    def pass_context(self): ...
    @property
    def dist_op_context(self): ...
    @property
    def block_state(self): ...
    @property
    def has_annotation(self): ...
    @property
    def gradient_scale(self): ...
    @gradient_scale.setter
    def gradient_scale(self, gs) -> None: ...
    @property
    def data_parallel(self): ...
    @property
    def up_down_streams(self): ...
    @data_parallel.setter
    def data_parallel(self, dp) -> None: ...
    def initialize(self, with_graph: bool = True, with_cpp: bool = False, no_default: bool = False) -> None: ...
    def add_process_mesh(self, process_mesh) -> None: ...
    def add_dist_tensor_for_program(self, dist_tensor) -> None: ...
    def add_dist_op_for_program(self, dist_op) -> None: ...
    def get_dist_tensor_for_program(self, serial_tensor): ...
    def get_dist_tensor_for_graph(self, serial_tensor_node): ...
    def get_dist_op_for_program(self, serial_op): ...
    def del_dist_op_for_program(self, serial_tensor) -> None: ...
    def get_dist_op_for_graph(self, serial_op_node): ...
    def get_tensor_dist_attr_for_program(self, serial_tensor): ...
    def get_tensor_dist_attr_for_program_with_id(self, tensor_id): ...
    def set_tensor_dist_attr_for_program(self, serial_tensor, dist_attr) -> None: ...
    def get_tensor_dist_attr_for_graph(self, serial_tensor_node): ...
    def get_op_dist_attr_for_program(self, serial_op): ...
    def get_op_dist_attr_for_program_with_id(self, op_id): ...
    def set_op_dist_attr_for_program(self, serial_op, dist_attr) -> None: ...
    def get_op_dist_attr_for_graph(self, serial_op_node): ...
    def get_dist_attr_for_graph(self, serial_node): ...
    def clear_dist_info_for_program(self) -> None: ...
    def clear_dist_info_for_graph(self) -> None: ...
    def copy_dist_attr_from_program_to_graph(self) -> None: ...
    def copy_dist_attr_from_graph_to_program(self) -> None: ...
    def amend_dist_attr_for_program(self) -> None: ...
    def validate_dist_attr_for_program(self): ...
    def __deepcopy__(self, memo): ...

class DistributedOperatorContext:
    grad_op_id_to_op_id: Incomplete
    grad_var_to_var: Incomplete
    already_init_sync_vars: Incomplete
    varname_mapping: Incomplete
    rank_id: Incomplete
    def __init__(self) -> None: ...
    def __deepcopy__(self, memo): ...
    @property
    def dst_main_program(self): ...
    @dst_main_program.setter
    def dst_main_program(self, prog) -> None: ...
    @property
    def main_block(self): ...
    @property
    def dst_startup_program(self): ...
    @dst_startup_program.setter
    def dst_startup_program(self, prog) -> None: ...
    @property
    def startup_block(self): ...
    @property
    def work_block(self): ...
    @work_block.setter
    def work_block(self, block) -> None: ...
    @property
    def cur_src_op(self): ...
    def in_backward_phase(self): ...
    def prepare_context(self, src_op): ...

class BlockState:
    nblock: int
    forward_indices: Incomplete
    backward_indices: Incomplete
    backward_to_forward_index_map: Incomplete
    def __init__(self) -> None: ...
    def parse_forward_blocks(self, program) -> None: ...
    def parse_backward_blocks(self, program) -> None: ...

class UpDownStream:
    def __init__(self) -> None: ...
    def add_up_stream(self, rank, up_stream): ...
    def add_down_stream(self, rank, down_stream): ...
    def add_pair_stream(self, up, down) -> None: ...
    def ups(self, rank): ...
    def downs(self, rank): ...
