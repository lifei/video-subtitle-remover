from ...utils.log_utils import get_logger as get_logger
from .utils import dygraph_guard as dygraph_guard
from _typeshed import Incomplete
from paddle.framework import core as core

logger: Incomplete

def get_all_process_groups(): ...
def get_process_group(group_id, g_process_group_map: Incomplete | None = None): ...
def get_world_process_group(): ...
def clear_all_process_groups() -> None: ...
def remove_process_group(ring_id) -> None: ...
def new_process_group(ranks, group_id: Incomplete | None = None, force_new_group: bool = False, group_type: Incomplete | None = None): ...

class ProcessGroup:
    def __init__(self, group_id, ranks, group_type: Incomplete | None = None) -> None: ...
    @property
    def id(self): ...
    @property
    def ranks(self): ...
    @property
    def nranks(self): ...
    @property
    def group_type(self): ...
    def add_ranks(self, new_ranks) -> None: ...
    def local_rank(self, global_rank): ...
    def is_instantiate(self): ...
    def instantiate(self) -> None: ...
    def is_member(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...
