from ..dist_attribute import OperatorDistAttr as OperatorDistAttr, TensorDistAttr as TensorDistAttr
from ..process_group import new_process_group as new_process_group
from ..utils import compute_compatible_dim_mapping as compute_compatible_dim_mapping, is_dim_replicate as is_dim_replicate, is_dim_shard as is_dim_shard, set_dist_op_desc_original_id as set_dist_op_desc_original_id
from .common import DistributedOperatorImpl as DistributedOperatorImpl, DistributedOperatorImplContainer as DistributedOperatorImplContainer, register_distributed_operator_impl as register_distributed_operator_impl, register_distributed_operator_impl_container as register_distributed_operator_impl_container
from paddle.common_ops_import import check_dtype as check_dtype, check_variable_and_dtype as check_variable_and_dtype
from paddle.framework import core as core
from paddle.static import Operator as Operator

class DistributedPNorm(DistributedOperatorImplContainer):
    def __init__(self, op_type) -> None: ...

class DistributedPNormImpl0(DistributedOperatorImpl):
    def __init__(self, name) -> None: ...
    def is_input_compatible(self, dist_op): ...
    def is_output_compatible(self, dist_op): ...
    def is_compatible(self, dist_op): ...
    def is_auto_compatible(self, dist_op): ...
    def update_dims_mapping(self, dist_op): ...
    @staticmethod
    def forward(ctx, *args, **kwargs) -> None: ...
    @staticmethod
    def backward(ctx, *args, **kwargs) -> None: ...
