from ..completion import get_phi_spmd_rule as get_phi_spmd_rule
from ..cost import EmbeddingGradOpCost as EmbeddingGradOpCost, EmbeddingOpCost as EmbeddingOpCost, build_comm_costs_from_descs as build_comm_costs_from_descs, build_comm_desc_from_dist_op as build_comm_desc_from_dist_op, build_comp_costs_from_descs as build_comp_costs_from_descs, build_comp_desc_from_dist_op as build_comp_desc_from_dist_op, build_dp_costs as build_dp_costs
from ..dist_attribute import OperatorDistAttr as OperatorDistAttr
from ..process_group import new_process_group as new_process_group
from ..utils import compute_compatible_and_update_dim_mapping as compute_compatible_and_update_dim_mapping, get_dist_tensor_spec as get_dist_tensor_spec, is_dim_replicate as is_dim_replicate, is_dim_shard as is_dim_shard, set_var_dist_attr as set_var_dist_attr
from .common import DistributedOperatorImpl as DistributedOperatorImpl, DistributedOperatorImplContainer as DistributedOperatorImplContainer, ParallelMode as ParallelMode, get_default_distributed_operator_impl as get_default_distributed_operator_impl, gradient_synchronization as gradient_synchronization, naive_copy_op_dist_attr_for_program as naive_copy_op_dist_attr_for_program, register_distributed_operator_impl as register_distributed_operator_impl, register_distributed_operator_impl_container as register_distributed_operator_impl_container, set_comm_op_dist_attr_for_program as set_comm_op_dist_attr_for_program, update_op_dims_mapping as update_op_dims_mapping
from paddle.common_ops_import import check_variable_and_dtype as check_variable_and_dtype
from paddle.distributed.auto_parallel.static.cost.comm_op_cost import AllreduceSumOpCost as AllreduceSumOpCost, IdentityOpCost as IdentityOpCost
from paddle.distributed.fleet.meta_optimizers.common import OP_ROLE_KEY as OP_ROLE_KEY, OpRole as OpRole
from paddle.framework import core as core
from paddle.utils import unique_name as unique_name

class DistributedEmbedding(DistributedOperatorImplContainer):
    def __init__(self, op_type) -> None: ...
    @staticmethod
    def update_dims_mapping(dist_op): ...
    @staticmethod
    def mapping_to_dist_operator_impl(dist_op, original_op_dist_attr): ...

def adopt_lookup_table_v1(ctx, main_block, src_op, Ids_var): ...

class DistributedEmbeddingImpl(DistributedOperatorImpl):
    def __init__(self, name) -> None: ...
    def calc_cost(self, op_role, dist_op, ctx, cluster): ...
    def calc_fwd_cost(self, dist_op, ctx, cluster): ...
    def calc_bwd_cost(self, dist_op, ctx, cluster): ...
    def is_input_compatible(self, dist_op): ...
    def is_output_compatible(self, dist_op): ...
    def is_auto_compatible(self, dist_op): ...
    def update_dims_mapping(self, dist_op): ...
    @staticmethod
    def forward(ctx, *args, **kwargs) -> None: ...
    @staticmethod
    def backward(ctx, *args, **kwargs) -> None: ...
