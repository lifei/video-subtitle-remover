from ..utils import is_dim_shard as is_dim_shard
from .common import DistributedOperatorImpl as DistributedOperatorImpl, DistributedOperatorImplContainer as DistributedOperatorImplContainer, register_distributed_operator_impl as register_distributed_operator_impl, register_distributed_operator_impl_container as register_distributed_operator_impl_container
from .dist_default import DistributedDefaultImpl0 as DistributedDefaultImpl0

class DistributedShape(DistributedOperatorImplContainer):
    def __init__(self, op_type) -> None: ...

class DistributedShapeImpl(DistributedOperatorImpl):
    def __init__(self, name) -> None: ...
    def is_input_compatible(self, dist_op): ...
    def is_output_compatible(self, dist_op): ...
    def is_auto_compatible(self, dist_op): ...
    def update_dims_mapping(self, dist_op): ...
    @staticmethod
    def forward(ctx, *args, **kwargs) -> None: ...
    @staticmethod
    def backward(ctx, *args, **kwargs) -> None: ...
