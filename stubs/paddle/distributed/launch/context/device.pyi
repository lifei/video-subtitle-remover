from _typeshed import Incomplete
from paddle.base import core as core
from paddle.device import get_available_custom_device as get_available_custom_device

class DeviceType:
    CPU: str
    GPU: str
    XPU: str
    IPU: str
    CUSTOM_DEVICE: str

class Device:
    def __init__(self, dtype: Incomplete | None = None, memory: str = '', labels: str = '') -> None: ...
    @property
    def dtype(self): ...
    @property
    def count(self): ...
    @property
    def memory(self): ...
    @property
    def labels(self): ...
    @labels.setter
    def labels(self, lbs) -> None: ...
    def get_selected_device_key(self): ...
    def get_selected_devices(self, devices: str = ''): ...
    def get_custom_device_envs(self): ...
    @classmethod
    def parse_device(self): ...
    @classmethod
    def detect_device(self): ...
