from .args_envs import env_args_mapping as env_args_mapping, fetch_envs as fetch_envs, parse_args as parse_args
from .node import Node as Node
from .status import Status as Status
from _typeshed import Incomplete
from paddle.distributed.launch import plugins as plugins

class Context:
    envs: Incomplete
    node: Incomplete
    status: Incomplete
    logger: Incomplete
    events: Incomplete
    max_time_per_task: int
    run_best: bool
    def __init__(self, enable_plugin: bool = True) -> None: ...
    def print(self) -> None: ...
    def is_legacy_mode(self): ...
    def is_auto_tuner_mode(self): ...
    def get_envs(self): ...
    def set_envs(self, env={}) -> None: ...
    def get_logger(self, level=...): ...
    def continous_log(self) -> bool: ...
    def set_env_in_args(self) -> None: ...
