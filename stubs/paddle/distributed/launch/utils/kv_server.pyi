import http.server as SimpleHTTPServer
from _typeshed import Incomplete
from http.server import HTTPServer

class KVHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def do_GET(self) -> None: ...
    def do_PUT(self) -> None: ...
    def do_POST(self) -> None: ...
    def do_DELETE(self) -> None: ...
    def output(self, code, value: str = '') -> None: ...
    def log_message(self, format, *args) -> None: ...

class KVServer(HTTPServer):
    kv_lock: Incomplete
    kv: Incomplete
    port: Incomplete
    stopped: bool
    started: bool
    def __init__(self, port) -> None: ...
    listen_thread: Incomplete
    def start(self) -> None: ...
    def stop(self) -> None: ...

class PKVServer:
    def __init__(self, port) -> None: ...
    proc: Incomplete
    def start(self) -> None: ...
    def stop(self) -> None: ...
    @property
    def started(self): ...
    @property
    def stopped(self): ...
