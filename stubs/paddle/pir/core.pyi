from .._pir_ops import parameter as parameter, set_parameter as set_parameter
from ..base import unique_name as unique_name
from ..base.wrapped_decorator import signature_safe_contextmanager as signature_safe_contextmanager
from _typeshed import Incomplete
from collections.abc import Generator
from paddle.base.core import VarDesc as VarDesc
from paddle.base.libpaddle import DataType as DataType
from paddle.base.libpaddle.pir import Program as Program, set_global_program as set_global_program

vartype_to_datatype: Incomplete
np_type_to_paddle_type: Incomplete

def convert_np_dtype_to_dtype_(np_dtype): ...
def default_startup_program(): ...
def default_main_program(): ...
def switch_main_program(program): ...
def switch_startup_program(program): ...
def program_guard(main_program, startup_program: Incomplete | None = None) -> Generator[None]: ...

class ParameterMeta:
    shape: Incomplete
    dtype: Incomplete
    def __init__(self, shape, dtype) -> None: ...

def create_parameter(dtype, shape, name: Incomplete | None = None, **kwargs): ...
