from paddle.cuda_env import *
from .base.dataset import *
from .autograd import enable_grad as enable_grad, grad as grad, is_grad_enabled as is_grad_enabled, no_grad as no_grad, set_grad_enabled as set_grad_enabled
from .batch import batch as batch
from .distributed import DataParallel as DataParallel
from .framework import CPUPlace as CPUPlace, CUDAPinnedPlace as CUDAPinnedPlace, CUDAPlace as CUDAPlace, ParamAttr as ParamAttr, disable_signal_handler as disable_signal_handler, disable_static as disable_static, enable_static as enable_static, get_default_dtype as get_default_dtype, get_flags as get_flags, in_dynamic_mode as in_dynamic_mode, load as load, save as save, set_default_dtype as set_default_dtype, set_flags as set_flags
from .framework.dtype import bfloat16 as bfloat16, bool as bool, complex128 as complex128, complex64 as complex64, dtype as dtype, finfo as finfo, float16 as float16, float32 as float32, float64 as float64, iinfo as iinfo, int16 as int16, int32 as int32, int64 as int64, int8 as int8, uint8 as uint8
from .framework.random import get_cuda_rng_state as get_cuda_rng_state, get_rng_state as get_rng_state, seed as seed, set_cuda_rng_state as set_cuda_rng_state, set_rng_state as set_rng_state
from .hapi import Model as Model, flops as flops, summary as summary
from .nn.initializer.lazy_init import LazyGuard as LazyGuard
from .tensor.attribute import imag as imag, is_complex as is_complex, is_floating_point as is_floating_point, is_integer as is_integer, rank as rank, real as real, shape as shape
from .tensor.creation import arange as arange, assign as assign, cauchy_ as cauchy_, clone as clone, complex as complex, create_parameter as create_parameter, diag as diag, diag_embed as diag_embed, diagflat as diagflat, empty as empty, empty_like as empty_like, eye as eye, full as full, full_like as full_like, geometric_ as geometric_, linspace as linspace, logspace as logspace, meshgrid as meshgrid, ones as ones, ones_like as ones_like, polar as polar, to_tensor as to_tensor, tril as tril, tril_ as tril_, tril_indices as tril_indices, triu as triu, triu_ as triu_, triu_indices as triu_indices, zeros as zeros, zeros_like as zeros_like
from .tensor.einsum import einsum as einsum
from .tensor.linalg import bincount as bincount, bmm as bmm, cdist as cdist, cross as cross, dist as dist, dot as dot, histogram as histogram, matmul as matmul, mv as mv, t as t, t_ as t_, transpose as transpose, transpose_ as transpose_
from .tensor.logic import allclose as allclose, bitwise_and as bitwise_and, bitwise_and_ as bitwise_and_, bitwise_not as bitwise_not, bitwise_not_ as bitwise_not_, bitwise_or as bitwise_or, bitwise_or_ as bitwise_or_, bitwise_xor as bitwise_xor, bitwise_xor_ as bitwise_xor_, equal as equal, equal_ as equal_, equal_all as equal_all, greater_equal as greater_equal, greater_equal_ as greater_equal_, greater_than as greater_than, greater_than_ as greater_than_, is_empty as is_empty, is_tensor as is_tensor, isclose as isclose, less_equal as less_equal, less_equal_ as less_equal_, less_than as less_than, less_than_ as less_than_, logical_and as logical_and, logical_and_ as logical_and_, logical_not as logical_not, logical_not_ as logical_not_, logical_or as logical_or, logical_or_ as logical_or_, logical_xor as logical_xor, not_equal as not_equal
from .tensor.manipulation import as_complex as as_complex, as_real as as_real, as_strided as as_strided, atleast_1d as atleast_1d, atleast_2d as atleast_2d, atleast_3d as atleast_3d, broadcast_tensors as broadcast_tensors, broadcast_to as broadcast_to, cast as cast, cast_ as cast_, chunk as chunk, concat as concat, crop as crop, diagonal_scatter as diagonal_scatter, expand as expand, expand_as as expand_as, flatten as flatten, flip as flip, flip as reverse, gather as gather, gather_nd as gather_nd, index_add as index_add, index_add_ as index_add_, index_fill as index_fill, index_fill_ as index_fill_, index_put as index_put, index_put_ as index_put_, masked_fill as masked_fill, masked_fill_ as masked_fill_, moveaxis as moveaxis, put_along_axis as put_along_axis, repeat_interleave as repeat_interleave, reshape as reshape, reshape_ as reshape_, roll as roll, rot90 as rot90, scatter as scatter, scatter_ as scatter_, scatter_nd as scatter_nd, scatter_nd_add as scatter_nd_add, select_scatter as select_scatter, shard_index as shard_index, slice as slice, split as split, squeeze as squeeze, squeeze_ as squeeze_, stack as stack, strided_slice as strided_slice, take_along_axis as take_along_axis, tensordot as tensordot, tile as tile, tolist as tolist, unbind as unbind, unflatten as unflatten, unfold as unfold, unique as unique, unique_consecutive as unique_consecutive, unsqueeze as unsqueeze, unsqueeze_ as unsqueeze_, unstack as unstack, view as view, view_as as view_as, vsplit as vsplit
from .tensor.math import abs as abs, abs_ as abs_, acos as acos, acos_ as acos_, acosh as acosh, add as add, add_n as add_n, addmm as addmm, addmm_ as addmm_, all as all, amax as amax, amin as amin, angle as angle, any as any, asin as asin, asinh as asinh, atan as atan, atan2 as atan2, atan_ as atan_, atanh as atanh, broadcast_shape as broadcast_shape, ceil as ceil, clip as clip, combinations as combinations, conj as conj, cos as cos, cos_ as cos_, cosh as cosh, count_nonzero as count_nonzero, cummax as cummax, cummin as cummin, cumprod as cumprod, cumprod_ as cumprod_, cumsum as cumsum, cumsum_ as cumsum_, cumulative_trapezoid as cumulative_trapezoid, deg2rad as deg2rad, diagonal as diagonal, diff as diff, digamma as digamma, digamma_ as digamma_, divide as divide, divide_ as divide_, erf as erf, erf_ as erf_, erfinv as erfinv, exp as exp, expm1 as expm1, expm1_ as expm1_, floor as floor, floor_divide as floor_divide, floor_divide_ as floor_divide_, floor_mod as floor_mod, floor_mod_ as floor_mod_, fmax as fmax, fmin as fmin, frac as frac, frac_ as frac_, frexp as frexp, gcd as gcd, gcd_ as gcd_, heaviside as heaviside, hypot as hypot, hypot_ as hypot_, i0 as i0, i0_ as i0_, i0e as i0e, i1 as i1, i1e as i1e, increment as increment, inner as inner, isfinite as isfinite, isinf as isinf, isnan as isnan, kron as kron, lcm as lcm, lcm_ as lcm_, ldexp as ldexp, ldexp_ as ldexp_, lerp as lerp, lgamma as lgamma, lgamma_ as lgamma_, log as log, log10 as log10, log10_ as log10_, log1p as log1p, log2 as log2, log2_ as log2_, log_ as log_, logaddexp as logaddexp, logcumsumexp as logcumsumexp, logit as logit, logit_ as logit_, logsumexp as logsumexp, max as max, maximum as maximum, min as min, minimum as minimum, mm as mm, mod as mod, mod_ as mod_, multigammaln as multigammaln, multigammaln_ as multigammaln_, multiplex as multiplex, multiply as multiply, multiply_ as multiply_, nan_to_num as nan_to_num, nan_to_num_ as nan_to_num_, nanmean as nanmean, nansum as nansum, neg as neg, neg_ as neg_, nextafter as nextafter, outer as outer, polygamma as polygamma, polygamma_ as polygamma_, pow as pow, pow_ as pow_, prod as prod, rad2deg as rad2deg, reciprocal as reciprocal, remainder as remainder, remainder_ as remainder_, renorm as renorm, renorm_ as renorm_, round as round, rsqrt as rsqrt, scale as scale, sgn as sgn, sign as sign, sin as sin, sin_ as sin_, sinh as sinh, sinh_ as sinh_, sqrt as sqrt, square as square, square_ as square_, stanh as stanh, subtract as subtract, sum as sum, take as take, tan as tan, tan_ as tan_, tanh as tanh, tanh_ as tanh_, trace as trace, trapezoid as trapezoid, trunc as trunc, trunc_ as trunc_, vander as vander
from .tensor.random import bernoulli as bernoulli, check_shape as check_shape, multinomial as multinomial, normal as normal, normal_ as normal_, poisson as poisson, rand as rand, randint as randint, randint_like as randint_like, randn as randn, randperm as randperm, standard_normal as standard_normal, uniform as uniform
from .tensor.search import argmax as argmax, argmin as argmin, argsort as argsort, bucketize as bucketize, index_sample as index_sample, index_select as index_select, kthvalue as kthvalue, masked_select as masked_select, mode as mode, nonzero as nonzero, searchsorted as searchsorted, sort as sort, topk as topk, where as where, where_ as where_
from .tensor.stat import mean as mean, median as median, nanmedian as nanmedian, nanquantile as nanquantile, numel as numel, quantile as quantile, std as std, var as var
from .tensor.to_string import set_printoptions as set_printoptions
from _typeshed import Incomplete

__all__ = ['iinfo', 'finfo', 'dtype', 'uint8', 'int8', 'int16', 'int32', 'int64', 'float16', 'float32', 'float64', 'bfloat16', 'bool', 'complex64', 'complex128', 'addmm', 'addmm_', 'allclose', 'isclose', 't', 't_', 'add', 'subtract', 'diag', 'diagflat', 'diag_embed', 'isnan', 'scatter_nd_add', 'unstack', 'get_default_dtype', 'save', 'multinomial', 'get_cuda_rng_state', 'get_rng_state', 'rank', 'empty_like', 'eye', 'cumsum', 'cumsum_', 'cummax', 'cummin', 'cumprod', 'cumprod_', 'logaddexp', 'logcumsumexp', 'logit', 'logit_', 'LazyGuard', 'sign', 'is_empty', 'equal', 'equal_', 'equal_all', 'is_tensor', 'is_complex', 'is_integer', 'cross', 'where', 'where_', 'log1p', 'cos', 'cos_', 'tan', 'tan_', 'mean', 'mode', 'mv', 'in_dynamic_mode', 'min', 'amin', 'any', 'slice', 'normal', 'normal_', 'logsumexp', 'full', 'unsqueeze', 'unsqueeze_', 'argmax', 'Model', 'summary', 'flops', 'sort', 'searchsorted', 'bucketize', 'split', 'vsplit', 'logical_and', 'logical_and_', 'full_like', 'less_than', 'less_than_', 'kron', 'clip', 'Tensor', 'crop', 'ParamAttr', 'stanh', 'randint', 'randint_like', 'assign', 'gather', 'scale', 'zeros', 'rsqrt', 'squeeze', 'squeeze_', 'to_tensor', 'gather_nd', 'isinf', 'uniform', 'floor_divide', 'floor_divide_', 'remainder', 'remainder_', 'floor_mod', 'floor_mod_', 'roll', 'batch', 'max', 'amax', 'logical_or', 'logical_or_', 'bitwise_and', 'bitwise_and_', 'bitwise_or', 'bitwise_or_', 'bitwise_xor', 'bitwise_xor_', 'bitwise_not', 'bitwise_not_', 'mm', 'flip', 'rot90', 'bincount', 'histogram', 'multiplex', 'CUDAPlace', 'empty', 'shape', 'real', 'imag', 'is_floating_point', 'complex', 'reciprocal', 'rand', 'less_equal', 'less_equal_', 'triu', 'triu_', 'sin', 'sin_', 'dist', 'cdist', 'unbind', 'meshgrid', 'arange', 'load', 'numel', 'median', 'nanmedian', 'quantile', 'nanquantile', 'no_grad', 'enable_grad', 'set_grad_enabled', 'is_grad_enabled', 'mod', 'mod_', 'abs', 'abs_', 'tril', 'tril_', 'pow', 'pow_', 'zeros_like', 'maximum', 'topk', 'index_select', 'CPUPlace', 'matmul', 'seed', 'acos', 'acos_', 'logical_xor', 'exp', 'expm1', 'expm1_', 'bernoulli', 'poisson', 'sinh', 'sinh_', 'round', 'DataParallel', 'argmin', 'prod', 'broadcast_shape', 'conj', 'neg', 'neg_', 'lgamma', 'lgamma_', 'lerp', 'erfinv', 'inner', 'outer', 'square', 'square_', 'divide', 'divide_', 'ceil', 'atan', 'atan_', 'atan2', 'rad2deg', 'deg2rad', 'gcd', 'gcd_', 'lcm', 'lcm_', 'expand', 'broadcast_to', 'ones_like', 'index_sample', 'cast', 'cast_', 'grad', 'all', 'ones', 'not_equal', 'sum', 'nansum', 'nanmean', 'count_nonzero', 'tile', 'greater_equal', 'greater_equal_', 'isfinite', 'create_parameter', 'dot', 'increment', 'erf', 'erf_', 'bmm', 'chunk', 'tolist', 'tensordot', 'greater_than', 'greater_than_', 'shard_index', 'argsort', 'tanh', 'tanh_', 'transpose', 'transpose_', 'cauchy_', 'geometric_', 'randn', 'strided_slice', 'unique', 'unique_consecutive', 'set_cuda_rng_state', 'set_rng_state', 'set_printoptions', 'std', 'flatten', 'asin', 'multiply', 'multiply_', 'disable_static', 'masked_select', 'var', 'trace', 'enable_static', 'scatter_nd', 'set_default_dtype', 'disable_signal_handler', 'expand_as', 'stack', 'sqrt', 'randperm', 'linspace', 'logspace', 'reshape', 'reshape_', 'atleast_1d', 'atleast_2d', 'atleast_3d', 'reverse', 'nonzero', 'CUDAPinnedPlace', 'logical_not', 'logical_not_', 'add_n', 'minimum', 'scatter', 'scatter_', 'floor', 'cosh', 'log', 'log_', 'log2', 'log2_', 'log10', 'log10_', 'concat', 'check_shape', 'trunc', 'trunc_', 'frac', 'frac_', 'digamma', 'digamma_', 'standard_normal', 'diagonal', 'broadcast_tensors', 'einsum', 'set_flags', 'get_flags', 'asinh', 'acosh', 'atanh', 'as_complex', 'as_real', 'diff', 'angle', 'fmax', 'fmin', 'moveaxis', 'repeat_interleave', 'clone', 'kthvalue', 'renorm', 'renorm_', 'take_along_axis', 'put_along_axis', 'select_scatter', 'multigammaln', 'multigammaln_', 'nan_to_num', 'nan_to_num_', 'heaviside', 'tril_indices', 'index_add', 'index_add_', 'index_put', 'index_put_', 'sgn', 'triu_indices', 'take', 'frexp', 'ldexp', 'ldexp_', 'trapezoid', 'cumulative_trapezoid', 'polar', 'vander', 'unflatten', 'as_strided', 'view', 'view_as', 'unfold', 'nextafter', 'i0', 'i0_', 'i0e', 'i1', 'i1e', 'polygamma', 'polygamma_', 'masked_fill', 'masked_fill_', 'hypot', 'hypot_', 'index_fill', 'index_fill_', 'diagonal_scatter', 'combinations']

Tensor: Incomplete
